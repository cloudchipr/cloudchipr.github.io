name: GH-Pages CI/CD

permissions:
  contents: read
  id-token: write

on:
  push:
    tags:
      - 'v*'

concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.ref_name }}

jobs:
  build-push-registry:
    name: Build and Push to ECR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: ${{ github.repository }}
          ref: ${{ github.ref_name }}
          token: ${{ secrets.GH_BOT_PAT }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ vars.OPS_GITHUB_ROLE }}
          aws-region: ${{ vars.ORG_AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: 'true'

      - name: Build Container Image and push to ECR
        env:
          ECR_REGISTRY: ${{ vars.OPS_PRIVATE_ECR_REGISTRY }}
          ECR_REPOSITORY: gh-pages
          GH_TAG: ${{ github.ref_name }}
        run: |
          docker build -t "${ECR_REGISTRY}/${ECR_REPOSITORY}:${GH_TAG}" --build-arg VERSION="${GH_TAG}" -f bin/docker/Dockerfile bin/
          docker tag "${ECR_REGISTRY}/${ECR_REPOSITORY}:${GH_TAG}" "${ECR_REGISTRY}/${ECR_REPOSITORY}:latest"
          docker push "${ECR_REGISTRY}/${ECR_REPOSITORY}:${GH_TAG}"
          docker push "${ECR_REGISTRY}/${ECR_REPOSITORY}:latest"


  edit-image-tag:
    needs: build-push-registry
    name: Checkout to target repository
    runs-on: ubuntu-latest
    steps:
      - name: Clone live environments repo
        uses: actions/checkout@v3
        with:
          repository: ${{ vars.SAAS_LIVE_ENVIRONMENTS_REPOSITORY }}
          ref: main
          path: live-environments
          token: ${{ secrets.gh_token }}

      - name: Edit image tag in live-environments
        env:
          TAG: ${{ github.ref_name }}
          ECR_REGISTRY: ${{ vars.OPS_PRIVATE_ECR_REGISTRY }}
          ECR_REPOSITORY: gh-pages

        run: |
          git config --global user.name ${{ vars.GH_BOT_USERNAME }}
          git config --global user.email ${{ vars.GH_BOT_EMAIL }}
          cd aws/sources/staging/gh-pages
          sed -i "s|$ECR_REGISTRY/$ECR_REPOSITORY:[^ ]*|$ECR_REGISTRY/$ECR_REPOSITORY:$TAG|" values.yaml
          git commit -am "release gh-pages version $TAG"
          git push
